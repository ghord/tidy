<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- region Brushes -->
    <SolidColorBrush x:Key="ButtonBackgroundBrush" Color="#e1e1e1"/>
    <SolidColorBrush x:Key="ButtonBorderBrush" Color="#adadad"/>
    <SolidColorBrush x:Key="ButtonForeground" Color="Black" />

    <SolidColorBrush x:Key="ButtonHighlightBorderBrush" Color="#0078d7"/>
    <SolidColorBrush x:Key="ButtonHighlightBackgroundBrush" Color="#e5f1fb"/>

    <SolidColorBrush x:Key="ButtonPressedBackgroundBrush" Color="#cce4f7" />
    <SolidColorBrush x:Key="ButtonPressedBorderBrush" Color="#005499" />

    <SolidColorBrush x:Key="ButtonDisabledBackgroundBrush" Color="#cccccc" />
    <SolidColorBrush x:Key="ButtonDisabledBorderBrush" Color="#bfbfbf" />
    <SolidColorBrush x:Key="ButtonDisabledForeground" Color="#838383" />

    <SolidColorBrush x:Key="ButtonFocusVisualStyleBrush" Color="Black" />
    <!-- endregion Brushes -->

    <!-- region Buttons -->

    <ControlTemplate TargetType="{x:Type ButtonBase}" x:Key="ButtonBaseTemplate">
        <Border 
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
            <ContentPresenter Name="Content"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                RecognizesAccessKey="True"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonHighlightBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource ButtonHighlightBorderBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonPressedBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource ButtonPressedBorderBrush}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonPressedBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource ButtonPressedBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource ButtonDisabledBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource ButtonDisabledBorderBrush}" />
                <Setter Property="Foreground" Value="{StaticResource ButtonDisabledForeground}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Button.IsDefaulted" Value="True" />
                    <Condition Property="IsMouseOver" Value="False" />
                </MultiTrigger.Conditions>

                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="Margin" TargetName="Content" Value="-1" />
                <Setter Property="BorderBrush" Value="{StaticResource ButtonHighlightBorderBrush}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>

    <Style TargetType="{x:Type ButtonBase}" x:Key="ButtonBaseStyle">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Padding" Value="2,1,2,2" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}" />
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True"
                                           RenderOptions.EdgeMode="Aliased"
                                           StrokeThickness="1" 
                                           Stroke="{StaticResource ButtonFocusVisualStyleBrush}" 
                                           StrokeDashArray="1 1"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template" Value="{StaticResource ButtonBaseTemplate}" />
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBaseStyle}" />
    
    <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ButtonBaseStyle}" />
        
    <Style TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
    </Style>
    
    <!-- endregion Buttons -->

</ResourceDictionary>